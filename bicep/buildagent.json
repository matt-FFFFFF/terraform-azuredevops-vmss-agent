{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "852851896594155199"
    }
  },
  "parameters": {
    "adminUserName": {
      "type": "string",
      "defaultValue": "buildagent",
      "metadata": {
        "description": "Admin username for VMs"
      }
    },
    "adminSshPubKey": {
      "type": "string",
      "metadata": {
        "description": "Administrative SSH key for the VM"
      }
    },
    "customDataBase64": {
      "type": "string",
      "metadata": {
        "description": "Cloud Init file encoded as base64"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of Key Vault"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Location to deploy resources"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Resource group name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account name"
      }
    },
    "storageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_ZRS",
      "metadata": {
        "description": "Storage account name"
      }
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "metadata": {
        "description": "VM SKU to use for VM scale set"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "Virtual network address prefix, e.g. 10.0.0.0/28"
      }
    }
  },
  "functions": [],
  "variables": {
    "privateDnsZones": [
      "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
      "privatelink.vaultcore.azure.net"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vnetDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "17596001100974481910"
            }
          },
          "parameters": {
            "vnetAddressPrefix": {
              "type": "string",
              "metadata": {
                "description": "Virtual network address prefix, e.g. 10.0.0.0/24"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "buildagent-vnet",
              "location": "[resourceGroup().location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "default",
                    "properties": {
                      "addressPrefix": "[parameters('vnetAddressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'buildagent-nsg')]"
                      },
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'buildagent-nsg')]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "buildagent-nsg",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": []
              }
            }
          ],
          "outputs": {
            "virtualNetwork": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'buildagent-vnet'), '2021-02-01', 'full')]"
            },
            "subnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'buildagent-vnet', reference(resourceId('Microsoft.Network/virtualNetworks', 'buildagent-vnet')).subnets[0].name)]"
            },
            "vnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', 'buildagent-vnet')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vmssDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminSshPubKey": {
            "value": "[parameters('adminSshPubKey')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "customDataBase64": {
            "value": "[parameters('customDataBase64')]"
          },
          "vmSku": {
            "value": "[parameters('vmSku')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2019-10-01').outputs.subnetResourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "10235894596379206061"
            }
          },
          "parameters": {
            "adminUserName": {
              "type": "string",
              "metadata": {
                "description": "Admin username for VMs"
              }
            },
            "customDataBase64": {
              "type": "string",
              "metadata": {
                "description": "Cloud Init file encoded as base64"
              }
            },
            "vmSku": {
              "type": "string",
              "metadata": {
                "description": "VM SKU to use for VM scale set"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Subnet resourceId to link the VMSS to"
              }
            },
            "adminSshPubKey": {
              "type": "string",
              "metadata": {
                "description": "Administrative SSH key for the VM"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachineScaleSets",
              "apiVersion": "2021-03-01",
              "name": "buildagent",
              "location": "[resourceGroup().location]",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": 1
              },
              "properties": {
                "overprovision": false,
                "upgradePolicy": {
                  "automaticOSUpgradePolicy": {
                    "enableAutomaticOSUpgrade": false
                  },
                  "mode": "Manual"
                },
                "virtualMachineProfile": {
                  "storageProfile": {
                    "osDisk": {
                      "caching": "ReadOnly",
                      "createOption": "FromImage"
                    },
                    "imageReference": {
                      "offer": "0001-com-ubuntu-server-focal",
                      "publisher": "Canonical",
                      "sku": "20_04-lts",
                      "version": "latest"
                    }
                  },
                  "osProfile": {
                    "computerNamePrefix": "buildagent",
                    "adminUsername": "[parameters('adminUserName')]",
                    "linuxConfiguration": {
                      "provisionVMAgent": true,
                      "ssh": {
                        "publicKeys": [
                          {
                            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUserName'))]",
                            "keyData": "[parameters('adminSshPubKey')]"
                          }
                        ]
                      }
                    },
                    "customData": "[parameters('customDataBase64')]"
                  },
                  "diagnosticsProfile": {
                    "bootDiagnostics": {
                      "enabled": true
                    }
                  },
                  "networkProfile": {
                    "networkInterfaceConfigurations": [
                      {
                        "name": "buildagent-nic",
                        "properties": {
                          "primary": true,
                          "ipConfigurations": [
                            {
                              "name": "buildagent-ipconfig",
                              "properties": {
                                "subnet": {
                                  "id": "[parameters('subnetId')]"
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Compute/virtualMachineScaleSets', 'buildagent'), '2021-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "stgDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountSku": {
            "value": "[parameters('storageAccountSku')]"
          },
          "vmssPrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vmssDeploy'), '2019-10-01').outputs.principalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "16524580901314123417"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountSku": {
              "type": "string"
            },
            "vmssPrincipalId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "roleDefinition_storageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[resourceGroup().location]",
              "kind": "StorageV2",
              "sku": {
                "name": "[parameters('storageAccountSku')]"
              },
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "bypass": "None",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "allowSharedKeyAccess": false
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(format('{0}{1}{2}', parameters('vmssPrincipalId'), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), variables('roleDefinition_storageBlobDataContributor')))]",
              "properties": {
                "principalId": "[parameters('vmssPrincipalId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinition_storageBlobDataContributor'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vmssDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "kvDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "vmssPrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vmssDeploy'), '2019-10-01').outputs.principalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "3056212364885427501"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "vmssPrincipalId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "roleDefinition_keyVaultSecretsUser": "4633458b-17de-408a-b874-0445c86b69e6"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enablePurgeProtection": true,
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(format('{0}{1}{2}', parameters('vmssPrincipalId'), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), variables('roleDefinition_keyVaultSecretsUser')))]",
              "properties": {
                "principalId": "[parameters('vmssPrincipalId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinition_keyVaultSecretsUser'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "vault": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2019-09-01', 'full')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vmssDeploy')]"
      ]
    },
    {
      "copy": {
        "name": "pdns",
        "count": "[length(variables('privateDnsZones'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('pdnsDeploy{0}', variables('privateDnsZones')[copyIndex()])]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2019-10-01').outputs.vnetResourceId.value]"
          },
          "zone": {
            "value": "[variables('privateDnsZones')[copyIndex()]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "884955994260580518"
            }
          },
          "parameters": {
            "vnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "The virtual network resource id to link the DNS zone to"
              }
            },
            "zone": {
              "type": "string",
              "metadata": {
                "description": "The zone to create"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('zone')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('zone'), format('{0}-link', parameters('zone')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetResourceId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('zone'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    }
  ]
}